<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="colPid.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colIcon.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colLocalIP.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colLocalPort.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colRemoteIP.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colRemotePort.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>227, 17</value>
  </metadata>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>107, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /8HgAf/B8AP/wfAD/+H4A////wf///////8=
</value>
  </data>
</root>